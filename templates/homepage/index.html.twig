{% extends 'base.html.twig' %}

{% block title %}Blauwmaan{% endblock %}

{% block body %}
    <link href="https://fonts.googleapis.com/css?family=Pacifico&display=swap" rel="stylesheet">
<style>
    body {
        margin: 0;
        padding: 0;
        position: relative;
        box-sizing: border-box;
        overflow: hidden;
    }

    canvas {

        width: 100%;
        height: 100%;

    }

    .moveUp {
        position: absolute;
        top: 150px;
    }

    .boxTitle {
        clip-path: circle(50%);
        background-image: conic-gradient(transparent, blue, transparent, deepskyblue, transparent);
        box-shadow: 0 0 4px inset black, 0 0 25px inset transparent;
    }

    .fullOp {
        font-family: 'Pacifico', cursive;
        font-size: 40pt;
        color: black;
        filter: opacity(50%);
        text-shadow: 0 1px 4px whitesmoke,
    0 5px 10px navajowhite;


    }



</style>
    <template id="tmp">
        <div class="container-fluid moveUp">
            <main class="mt-5 rounded row">
                <div class="col-3"></div>
                <div class="boxTitle col-6 mx-auto mt-5 px-5 py-5 rounded">
                    <h1 class="text-center fullOp">Blauwmaan</h1>
                    <h4 class="text-center fullOp">Web Production Studio</h4>
                </div>
                <div class="col-3"></div>
            </main>
        </div>
    </template>


    <script>
        let scene, camera, renderer, geometry, material, controls;
        let smokeArray = [];
        function init () {
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 1000);
            camera.position.z = 1;
            camera.rotation.x = 1.14;
            camera.rotation.y = -0.12;
            camera.rotation.z = 0.27;


            let ambientLight = new THREE.AmbientLight(0x555555);
            scene.add(ambientLight);

            let directionalLight = new THREE.DirectionalLight(0xfff03);
            directionalLight.position.set(0, 0, 1);
            scene.add(directionalLight);

            let light = new THREE.PointLight(0xff90, 50, 450, 1.7);
            light.position.set(200, 300, 100);
            scene.add(light);
            light = new THREE.PointLight(0xba112d, 50, 450, 1.7);
            light.position.set(100, 300, 100);
            scene.add(light);
            light = new THREE.PointLight(0x1e2d78, 50, 450, 1.7);
            light.position.set(300, 300, 200);
            scene.add(light);



            renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            scene.fog = new THREE.FogExp2(0x214142, 0.0001);
            renderer.setClearColor(scene.fog.color);
            document.body.appendChild(renderer.domElement);
            var template = document.querySelector('#tmp');
            var clone = document.importNode(template.content, true);
            document.body.appendChild(clone);


            let textureLoader = new THREE.TextureLoader();
            textureLoader.load('../assets/images/stars.png', function(texture) {
                geometry = new THREE.PlaneBufferGeometry(500, 500);
                material = new THREE.MeshLambertMaterial({
                    map: texture,
                    transparent: true
                });


                for (let i = 0; i < 50; i++) {
                    let smoke = new THREE.Mesh(geometry, material);
                    smoke.position.set(
                        Math.random()*window.innerWidth-500,
                        250,
                        Math.random()*window.innerHeight-500
                    );

                    smoke.rotation.x = 1.16;
                    smoke.rotation.y = -0.12;
                    smoke.rotation.z = Math.random()*2 * Math.PI;
                    smoke.material.opacity = 0.55;
                    smokeArray.push(smoke);
                    scene.add(smoke);
                }
            });

            render();
        }

        function render () {
            smokeArray.forEach(function (element){
                element.rotation.z -= 0.001;
            });
            renderer.render(scene, camera);
            requestAnimationFrame(render);
        }

        init();

    </script>
{% endblock %}
